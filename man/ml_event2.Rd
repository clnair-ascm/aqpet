% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ml_event2.R
\name{ml_event2}
\alias{ml_event2}
\title{Machine Learning Enhanced Event Model}
\usage{
ml_event2(
  df,
  params,
  cpd = F,
  window = 10,
  added_time = c("trend", "year", "month", "day", "hour", "doy", "dow", "unixtime"),
  ...
)
}
\arguments{
\item{df}{A dataframe containing the time series data.}

\item{params}{A list containing parameters that dictate the behavior of the model. Expected fields are
`start_time`, `end_time`, `split_proportion`, `max_models`, `max_runtime_secs`, `algorithm`, and `criterion`.}

\item{cpd}{Logical flag indicating if residual smoothing and decomposition should be done. Default is FALSE.}

\item{window}{Numeric value indicating the window size for smoothing. Default is 10.}

\item{added_time}{Character vector specifying which date related columns to add. Default includes elements like
"trend", "year", "month", etc.}

\item{...}{Further arguments passed to other methods.}
}
\value{
A list containing:
  - `data`: A dataframe with processed data, predictions, differences, and efficiencies.
  - `model`: The machine learning model used for predictions.
}
\description{
The function combines time-series processing with machine learning to provide a predictive model
for an event in the data, returning the processed data, predictions, differences, and efficiencies.
}
\details{
The function begins by optionally processing the input dataframe, decomposing and smoothing residuals using the
BSTS (Bayesian Structural Time Series) method. If residual smoothing is enabled, it applies smoothing based on the
given window.
Subsequently, it transforms the time-series data by adding time-related columns and prepares the data for modeling.
Finally, an automatic machine learning model is applied, followed by predictions.
The differences and efficiencies between the observed and predicted values are also calculated.
The function returns a list containing the processed data, predictions, differences, efficiencies, and the
machine learning model.
}
\examples{
\dontrun{
# Create a sample dataframe
df <- data.frame(
  datetime = seq(from = as.POSIXct("2020-01-01"), to = as.POSIXct("2020-01-10"), by = "hour"),
  metric1 = rnorm(240),
  metric2 = rnorm(240)
)

# Define params list
params <- list(
  start_time = as.POSIXct("2020-01-03 00:00"),
  end_time = as.POSIXct("2020-01-07 23:00"),
  split_proportion = 0.7,
  max_models = 10,
  max_runtime_secs = 60,
  algorithm = "GBM",
  criterion = "RMSE"
)

results <- ml_event2(df, params, rsd = TRUE, window = 5)
}

}
\author{
[Yuqing Dai]
}
